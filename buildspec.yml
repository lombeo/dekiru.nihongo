version: 0.2
 
env:
  variables:
    AWS_DEFAULT_OUTPUT: "json"
    BUILD_VERSION: ""
    REPOSITORY_SERVICE_PATH: "edunext-lmswebapp"
 
phases:
  pre_build:
    commands:
      - |-
        if [ "$REPOSITORY_HOST" = "777014526532.dkr.ecr.ap-southeast-1.amazonaws.com" ]; then
           echo ================Deploy on AWS================
           echo === Login to Amazon ECR ===
           aws --version
           $(aws ecr get-login --no-include-email --region $AWS_REGION)
        fi
      - |-
        if [ "$REPOSITORY_HOST" = "ednfptcloudregistry.edunext.vn" ]; then
           echo ================Deploy on FPT Cloud================
        fi
      - echo [DEBUG] IMAGE_TAG=$IMAGE_TAG
 
  build:
    commands:
      - |
        if [ "$HAS_DEPLOY_CONFIG" = true ] ; then
           cp -r tmp_config/env.$BUILD_BRANCH .env.production
        fi
      - |
        if [ "$HAS_DEPLOY_CONFIG" = false ] ; then
           rm .env.production
           cp .env.$BUILD_BRANCH .env.production
        fi
      - echo Base version=$BASE_IMAGE_VERSION
      - baseimage=$(docker manifest inspect $REPOSITORY_HOST/lmswebappbase:$BASE_IMAGE_VERSION 2> error.log && echo 0 || echo 1)
      - |
        if [ $baseimage = 1 ] ; then
           echo ==============Update base=================
           docker build -f dockerfile_baseimage_k8s -t $REPOSITORY_HOST/lmswebappbase:$BASE_IMAGE_VERSION .
           docker push $REPOSITORY_HOST/lmswebappbase:$BASE_IMAGE_VERSION
           docker tag $REPOSITORY_HOST/lmswebappbase:$BASE_IMAGE_VERSION $REPOSITORY_HOST/lmswebappbase:latest
           docker push $REPOSITORY_HOST/lmswebappbase:latest
           docker tag $REPOSITORY_HOST/lmswebappbase:$BASE_IMAGE_VERSION $REPOSITORY_HOST/$REPOSITORY_SERVICE_PATH:$IMAGE_TAG
        fi
      - deployimage=$(docker images -q $REPOSITORY_HOST/$REPOSITORY_SERVICE_PATH:$IMAGE_TAG)
      - |
        if [ "$deployimage" = "" ] ; then
           docker tag $REPOSITORY_HOST/cmsnextbase:$BASE_IMAGE_VERSION $REPOSITORY_HOST/cmsnextbase:latest
           docker build -f dockerfile_k8s -t $REPOSITORY_HOST/$REPOSITORY_SERVICE_PATH:$IMAGE_TAG .
        fi
      - docker images
      - echo "Tagging version for ecr image"
 
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker images
      - docker push $REPOSITORY_HOST/$REPOSITORY_SERVICE_PATH:$IMAGE_TAG

